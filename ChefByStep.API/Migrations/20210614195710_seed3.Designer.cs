// <auto-generated />
using System;
using ChefByStep.API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChefByStep.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210614195710_seed3")]
    partial class seed3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChefByStep.API.Entities.CompletedRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CompletedRecipes");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.FavouritedRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouritedRecipes");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Onion"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vegetable Oil"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Garlic"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Red Chili"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Brown Rice"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Paprika"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rep Pepper"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Minced Beef"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Red Beans"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tomato Purée"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Carrot"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Oregano"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Speghetti"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Parmesan"
                        });
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Spaghetti bolognese consists of spaghetti (long strings of pasta) with an Italian ragù (meat sauce) made with minced beef, bacon and tomatoes, served with Parmesan cheese. Spaghetti bolognese is one of the most popular pasta dishes eaten outside of Italy.",
                            ImageUrl = "https://www.kitchensanctuary.com/wp-content/uploads/2019/09/Spaghetti-Bolognese-square-FS-0204.jpg",
                            Title = "Pasta Bolognese"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "This great chilli recipe has to be one of the best dishes to serve to friends for a casual get-together. An easy sharing favourite that uses up storecupboard ingredients.",
                            ImageUrl = "https://www.kitchensanctuary.com/wp-content/uploads/2014/10/Chilli-Con-Carne-Recipe-tall-FS.jpg",
                            Title = "Chili Con Carne"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Rustle up this prawn and cauliflower stir fry in just 25 minutes. You can easily make it vegan if preferred – simply omit the prawns and double up on the veg.",
                            ImageUrl = "https://www.kitchensanctuary.com/wp-content/uploads/2019/10/Kung-Pao-Chicken-tall-56-new.jpg",
                            Title = "Kung Pao Chicken"
                        });
                });

            modelBuilder.Entity("ChefByStep.API.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("AmountInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 14
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 13
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 12
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 11
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 8
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 4
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 8
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 10
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 9
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 1
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 3
                        });
                });

            modelBuilder.Entity("ChefByStep.API.Entities.RecipeRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeRatings");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurationMin")
                        .HasColumnType("int");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecipeStep", b =>
                {
                    b.Property<int>("RecipesId")
                        .HasColumnType("int");

                    b.Property<int>("StepsId")
                        .HasColumnType("int");

                    b.HasKey("RecipesId", "StepsId");

                    b.HasIndex("StepsId");

                    b.ToTable("RecipeStep");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.CompletedRecipe", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.Recipe", "Recipe")
                        .WithMany("CompletedBy")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChefByStep.API.Entities.User", "User")
                        .WithMany("CompletedRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.FavouritedRecipe", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.Recipe", "Recipe")
                        .WithMany("FavouritedBy")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChefByStep.API.Entities.User", "User")
                        .WithMany("FavouriteRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Recipe", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.User", "User")
                        .WithMany("CreatedRecipes")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChefByStep.API.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.RecipeRating", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.Recipe", "Recipe")
                        .WithMany("Ratings")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChefByStep.API.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeStep", b =>
                {
                    b.HasOne("ChefByStep.API.Entities.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChefByStep.API.Entities.Step", null)
                        .WithMany()
                        .HasForeignKey("StepsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.Recipe", b =>
                {
                    b.Navigation("CompletedBy");

                    b.Navigation("FavouritedBy");

                    b.Navigation("Ingredients");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("ChefByStep.API.Entities.User", b =>
                {
                    b.Navigation("CompletedRecipes");

                    b.Navigation("CreatedRecipes");

                    b.Navigation("FavouriteRecipes");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
